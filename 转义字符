//#include <stdio.h>
//赋值操作符
//int main()
//{int a=20
//	a+=10等价与a=a+10
//	a-=10等价于a=a-10
//
//
//
//	return 0;
//}


//
////关于sizeof的用法
////#include <stdio.h>
////int main()
////{
////	int arr[10] = { 0 };//10个整形元素全部都为0
////	int sz = 0;
//		printf("%d\n", sizeof(arr));//一个整形为4  有10个整形
//		sz = sizeof(arr) / sizeof(arr[0]);
//		printf("%d\n", sz);             //计算数组元素的个数
//
//		//sizeof是计算变量/类型所占的空间大小，单位是字节
//		printf("%d\n", sizeof(arr));
//		printf("%d\n", sizeof(int));
//		printf("%d\n", sizeof arr);
//		/*printf("%d\n", sizeof int);*///错误
//	return 0;
//}


//位操作符

////移位操作符
////移二进制（int是四个字节有32个比特，比特用来储存0，1）
////<<向左移
////<<向右移
//#include <stdio.h>
//int main()
//{
//	int a = ;
//	a << 10;
//printf("%d\n",a);
//	return 0;
//}



//&按位与
//|按位或
//^按位异或
//判断真假   1为真   0为假

//#include <stdio.h>
//int main()
//{
//	int a = 3;   //二进制是011    &只有两个数的二进制同时为1，结果才为1，否则为0。（负数按补码形式参加按位与运算）
//	int b = 5;   //二进制是101    |参加运算的两个数只要两个数中的一个为1，结果就为1
//	int c = a ^ b;  //001         ^参加运算的两个数，如果两个相应位为“异”（值不同），则该位结果为1，否则为0。
//
//	printf("%d\n", c);
//	return 0;
//}


//~二进制按位取反符号
//#include <stdio.h>
//int main()
//{
//
//	int a = 0;
//	//00000000000000000000000000000000
//	//原码，补码，反码
//	//负数储存时，储存的是二进制的补码
//	int b = ~a;
//	//11111111111111111111111111111111（它是一个负数，是0000...存储在计算机中的，但是打印出的不是补码，要打印出原码）
//	//原码求补码 取反加一   补码求原码 减一取反
//	//11111111111111111111111111111110
//	//00000000000000000000000000000001（这就是要打印出的原码为1）
//	printf(" % d\n", b);
//
//	return 0;
//
//}
	
//#include <stdio.h>
//int main()
//{
//	int a = 10;
//	int b = a++;   //先使用再++    
//	int b = ++a;   //先++再使用
//	printf("a=%d,b=%d\n", a,b);
//
//
//
//
//	return 0;
//}



//#include <stdio.h>
//int main()
//{
//
//	int a = (int)3.14;     //强制转类型的符号将小数转为整数
//	printf("%d\n", a);    
//
//
//	return 0;
//}



//逻辑操作符


//#include <stdio.h>
//int main()
//{   //真 -  非0
//	//假 -   0
//	//&& - 逻辑与(两者都为真才为真）
// //| -逻辑或   一真具真
//	int a = 0;
//	int b = 5;
//	int c = a | b;
//	printf("%d\n", c);
//
//
//
//
//	return 0;
//}


//条件操作符
#include <stdio.h>
int main()
{
	int a = 100;
	int b = 100000;
	int max = 0;
	max = (a > b ? a : b);   //exp1?exp2;exp3;  常用于比较大小
	printf("%d\n", max);


	return 0;
}
