//在一个数组中找到特定的数


//方法一：遍历法

//#include <stdio.h>
//int main()
//{
//	int k = 17;
//	int i = 0;
//	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
//	int sz = sizeof(arr) / sizeof(arr[0]);			
//	for (i = 0;i < sz;i++)					//i应该要严格小于sz，如果等于了就会影响下面的if，也就是在第一类if但是找不到下标，什么都不打印出来
//	{
//		if (k==arr[i])
//		{
//			printf("找到了，下标是：%d\n", i);
//			break;
//		}
//
//	}
//	if (i == sz)
////		printf("找不到\n");
////
//
//
//
//	return 0;
//}




#include <stdio.h>
int main()
{
	int k = 17;
	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
	int sz = sizeof(arr) / sizeof(arr[0]);				//while条件一定是小于等于这样才能，找到那个数，如果没有等于就会忽略掉
	int left = 0;
	int right = sz - 1;
	while (left <= right)
	{
		int mid = (left + right) / 2;
		if (arr[mid] > k)
		{
			right = mid - 1;
		}
		else if (arr[mid]< k)
		{
			left = mid + 1;
		}
		else
		{
			printf("找到了，下标是，%d\n", mid);
			break;
		}

	}

	if (left > right)
	{
		printf("找不到\n");
	}


	return  0;
}
